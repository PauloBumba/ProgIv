apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\Paulo_Bumba\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert -f docker-compose.yml
    kompose.version: 1.37.0 (fb0539e64)
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\Paulo_Bumba\AppData\Local\Microsoft\WinGet\Links\kompose.exe convert -f docker-compose.yml
        kompose.version: 1.37.0 (fb0539e64)
      labels:
        io.kompose.service: mysql
    spec:
      containers:
        - env:
            - name: DOTNET_RUNNING_IN_CONTAINER
              value: "true"
            - name: MYSQL_DATABASE
              value: MedicationDb
            - name: MYSQL_PASSWORD
              value: admin123
            - name: MYSQL_ROOT_PASSWORD
              value: root123
            - name: MYSQL_USER
              value: admin
          image: mysql:8.0
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -uroot
                - -proot123
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: meu-mysql
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
            - mountPath: /backups
              name: mysql-backup
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
        - name: mysql-backup
          persistentVolumeClaim:
            claimName: mysql-backup
